<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" hreflang="en" /><updated>2017-12-23T05:44:53+00:00</updated><id>/</id><title type="html">Joseph Hamilton - Solution Oriented Data Scientist</title><subtitle>A website by and for Joseph Hamilton. A place to explore projects and pursuits, to chase curiosities and catch dreams.
</subtitle><author><name>Joseph Hamilton</name><email>hamilton.joseph.r@gmail.com</email></author><entry><title type="html">Stats Series</title><link href="/training/ph_525_series/2017/12/22/Stats-Series/" rel="alternate" type="text/html" title="Stats Series" /><published>2017-12-22T00:00:00+00:00</published><updated>2017-12-22T00:00:00+00:00</updated><id>/training/ph_525_series/2017/12/22/Stats-Series</id><content type="html" xml:base="/training/ph_525_series/2017/12/22/Stats-Series/">&lt;p&gt;It’s time to shift gears a bit.  I need to start &lt;em&gt;*using&lt;/em&gt; this blog, not just play with it.&lt;/p&gt;

&lt;p&gt;I’ve about a month left before starting the &lt;strong&gt;Metis Data Science Bootcamp&lt;/strong&gt;.  One of the things I’d slotted to do in December was to work through this online course series from Harvard.  The Metis Boocamp is exclusively Python.  A number of these MOOCs and books focus on R.  I have found one book that does both Python and R.&lt;/p&gt;

&lt;p&gt;For this course, I’m going to try to replicate work in Python.&lt;/p&gt;

&lt;p&gt;The Harvard course is a 6 part series that parallels the book &lt;em&gt;Data Analysis for the Life Sciences&lt;/em&gt;.  I was drawn to the series when searching for a refresher on Linear Algebra.  That’s course 2 of 6.  I chose to use HackerRank for the review and will now push through the entire series, time permitting.&lt;/p&gt;

&lt;p&gt;The course starts with the R tutorial.  In order to load packages, I had to back out and load some more stuff in Anaconda:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;conda install gcc_linux-64
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;conda install gxx_linux-64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then I was able to proceed with&lt;/p&gt;
&lt;div class=&quot;language-R highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;install.packages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;swirl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;install.packages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;rafalib&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The first exercise in PHP 525.1x is a “First Assessment: Run Swirl Exercises”.  It’s essentially a quiz on basics of R syntax which you get through &lt;em&gt;swirl&lt;/em&gt; - the R tutorial.&lt;/p&gt;

&lt;p&gt;I used RStudio for swirl.  But then I fired up two parallel Jupyter notebooks - one for R and another for Python.  I installed &lt;a href=&quot;https://rpy2.bitbucket.io/&quot;&gt;rpy2&lt;/a&gt; and was even able to call the “version” command from Python to confirm the version of R.  But the main benefit of this was the access the standard datasets in R.&lt;/p&gt;

&lt;p&gt;They fairly strongly encouraged an approach of projects in RStudio.  I will try to mirror that in Python.  This should be a good chance to test out both Rodeo, which seems most akin to RStudio and Spyder.  The questions for this next exercise seem simple enough that notebooks will still work fine.&lt;/p&gt;</content><author><name>Joseph Hamilton</name><email>hamilton.joseph.r@gmail.com</email></author><category term="Statistics" /><category term="Harvard" /><category term="R" /><category term="Python" /><category term="Rodeo" /><category term="Spyder" /><summary type="html">It’s time to shift gears a bit. I need to start *using this blog, not just play with it.</summary></entry><entry><title type="html">Blog Toddler Steps - Step 03</title><link href="/blog/2017/12/22/Blog-Toddler-Steps-03/" rel="alternate" type="text/html" title="Blog Toddler Steps - Step 03" /><published>2017-12-22T00:00:00+00:00</published><updated>2017-12-22T00:00:00+00:00</updated><id>/blog/2017/12/22/Blog-Toddler-Steps-03</id><content type="html" xml:base="/blog/2017/12/22/Blog-Toddler-Steps-03/">&lt;p&gt;Exploring how to work Jekyll to accomplish what I want with this site…&lt;/p&gt;

&lt;p&gt;A number of things aren’t really necessary at the moment.  Nonetheless, I need to start getting my feet wet putting some of these things together.&lt;/p&gt;

&lt;p&gt;There seem to be many ways of doing any one thing.  Furthermore, some of these plugins seem small or trivial enough that it would be just as easy just to toss in the couple files.&lt;/p&gt;

&lt;p&gt;Let’s start with &lt;em&gt;jekyll-category-pages&lt;/em&gt;.  In order to use these plugins or make these changes, it’s rather important to understand how Jekyll functions at all.  Problem with lots of these plugins or plugin like things is there’s no fully functional demo.  This one does show a listing of categories.  But it’s not a format I’d want.  If what I want is paginated category pages…&lt;/p&gt;

&lt;p&gt;It would seem I could… just… build upon or extend the current functionality I have with HydeJack.  Jekyll isn’t clearly modular.  You have to take care when adding or changing things.&lt;/p&gt;

&lt;p&gt;So… it &lt;strong&gt;really&lt;/strong&gt; looks like it would be simple to change a couple of lines in a layout file to get pagination for categories.  But it doesn’t work… which is why someone went and made that plugin.  The “correct” thing these days is to upgrade to &lt;em&gt;jekyll-paginate-v2&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;OK.  Upgraded.  But the next problem is figuring out &lt;strong&gt;how&lt;/strong&gt; to use this.&lt;/p&gt;

&lt;p&gt;EDIT -  Thu Dec 21 16:36:07 CST 2017&lt;/p&gt;

&lt;p&gt;I brushed up on Ruby.  But ironically, learning the &lt;strong&gt;syntax&lt;/strong&gt; of Ruby doesn’t help so much when your problem is in packaging and file management.  I picked up where I left off.  At least I was better equipped to do web searches for solutions.&lt;/p&gt;

&lt;p&gt;The trouble was I just dumped the Gem into the &lt;em&gt;_includes&lt;/em&gt; directory which is where Jekyll docs says plugins go.  The files were getting pulled in.  But not in the appropriate order which was leading to dependency gaps.&lt;/p&gt;

&lt;p&gt;A working solution needs follow &lt;a href=&quot;https://newcome.wordpress.com/2013/02/07/hacking-on-local-ruby-gems/&quot;&gt;this sort of approach&lt;/a&gt;.  Sure enough, changing the site’s Gemfile from&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;jekyll-paginate-v2&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;to&lt;/p&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;jekyll-paginate-v2&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;_local/jekyll-paginate-v2&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;was all  I needed to switch to a local copy of the gem so I could play and explore.&lt;/p&gt;

&lt;p&gt;Picking up &lt;a href=&quot;http://pryrepl.org/&quot;&gt;pry&lt;/a&gt; along the way…&lt;/p&gt;

&lt;p&gt;OK.  That very much helped.  I could see what was happening.  Or more specifically what wasn’t happening.  Jekyll has some oddities baked in given its evolution.  Things that look similar in the templating are treated differently under the hood.  To add to the difficulty, the HydeJack theme does something interesting with categories.  It creates a collection for the categories you bother to document.  This is “featured” categories.  The &lt;em&gt;jekyll-paginate-v2&lt;/em&gt; has “autopages” which tries to autogenerate these sorts of pages.  I did &lt;strong&gt;not&lt;/strong&gt; like that.  I settled on changing HydeJack as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“Upgrade” to paginate-v2.&lt;/li&gt;
  &lt;li&gt;Switch the “featured_categories” collection to “no output”.&lt;/li&gt;
  &lt;li&gt;Symlink a category directory to “featured_categories”.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Believe it or not this works just fine.  With Hydejack and these “featured” collections, I only get the link this indexing for the tages and categories I deem important enough.  With paginate-v2 I get some extra functionality, including a “trail”.&lt;/p&gt;

&lt;p&gt;For the trail, I have to play around with CSS to get it to look good…  Tweaked the templating a bit too.  Looks good.  Now to prep things and deploy it…&lt;/p&gt;

&lt;p&gt;Hmm… running into issues…&lt;/p&gt;

&lt;p&gt;Everybody’s fascinated with  &lt;a href=&quot;https://yoast.com/slug/&quot;&gt;slugs&lt;/a&gt; these days…  There’s some inconsistency between urls here.  Jekyll doesn’t seem to be honoring defined slugs.  No that’s not the problem.  The trouble is parts of Jekyll are honoring things case-senstive and other parts of Jekyll force things to lower case.  Some people have just modifed Jekyll’s source to change that behavior.  That doesn’t seem good.&lt;/p&gt;

&lt;p&gt;Well… I don’t like it.  But any “fix” I implement here would be kludgey.  It’s probably safer long term to submit to case insenstive… sigh…&lt;/p&gt;

&lt;p&gt;But… back to slugs…  HydeJack is using the slug parameter to connect the category to the &lt;em&gt;featured_category&lt;/em&gt; collection.  So, ironically, it does need to remain case sensitive.&lt;/p&gt;

&lt;p&gt;Well… I’ve gotten my feet wet with Jekyll plugins and modifying things through the Liquid templating.&lt;/p&gt;</content><author><name>Joseph Hamilton</name><email>hamilton.joseph.r@gmail.com</email></author><category term="Jekyll" /><category term="Ruby" /><category term="Liquid" /><summary type="html">Exploring how to work Jekyll to accomplish what I want with this site…</summary></entry><entry><title type="html">Ruby on HackerRank</title><link href="/hackerrank/2017/12/19/HackerRank-Ruby/" rel="alternate" type="text/html" title="Ruby on HackerRank" /><published>2017-12-19T00:00:00+00:00</published><updated>2017-12-19T00:00:00+00:00</updated><id>/hackerrank/2017/12/19/HackerRank-Ruby</id><content type="html" xml:base="/hackerrank/2017/12/19/HackerRank-Ruby/">&lt;p&gt;I chose to burn through the Ruby track in HackerRank today.&lt;/p&gt;

&lt;p&gt;Recent exploration into plugins for Jekyll impressed upon me the need to brush up on and extend my knowledge with Ruby.&lt;/p&gt;

&lt;p&gt;I feel like Neo in Matrix when he exclaimed “I know Kung Fu!!”  I completed the entire track with the exception of one “Medium” level challenge.  Of course, this doesn’t make me an immediate Ruby expert.  But this certainly filled in the gaps with regards to syntax and such.  I’ll be much more able to read and digest Jekyll plugins.&lt;/p&gt;

&lt;p&gt;For Jekyll, I next need to read up on Liquid… and tear into exactly how Jekyll does what it does.&lt;/p&gt;

&lt;p&gt;I’ll finish the final Ruby challenge tomorrow.  It’s an exercise with Prime Palindromes.  What &lt;strong&gt;IS&lt;/strong&gt; it about programming tests and tutorials and this fixation on palindromes?  I get it that it helps reinforce concepts of control flow and optimization.  But sheesh.&lt;/p&gt;

&lt;p&gt;In any case, I’ll rough up my plan here before I attack it tomorrow:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Earlier in the track I created a primality tester.  I need to enhance that to keep it’s store of primes as a memory so as not to keep recreating it.&lt;/li&gt;
  &lt;li&gt;Next, I’ll try to take the path of iterating through all palindromes of given length and then test for prime rather than iterate through primes and check palindrome.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;EDIT:  It’s tomorrow.&lt;/p&gt;

&lt;p&gt;Chuckle… some days are busier than others with plain ole’ life.  Yesterday I could focus on Ruby.  Today I couldn’t even get around to this till late evening.&lt;/p&gt;

&lt;p&gt;In any case, I knocked out that final Ruby challenge!&lt;/p&gt;</content><author><name>Joseph Hamilton</name><email>hamilton.joseph.r@gmail.com</email></author><category term="Ruby" /><summary type="html">I chose to burn through the Ruby track in HackerRank today.</summary></entry><entry><title type="html">HackerRank</title><link href="/hackerrank/2017/12/17/HackerRank/" rel="alternate" type="text/html" title="HackerRank" /><published>2017-12-17T00:00:00+00:00</published><updated>2017-12-17T00:00:00+00:00</updated><id>/hackerrank/2017/12/17/HackerRank</id><content type="html" xml:base="/hackerrank/2017/12/17/HackerRank/">&lt;p&gt;I &lt;strong&gt;love&lt;/strong&gt; HackerRank.&lt;/p&gt;

&lt;p&gt;I’m dropping a note here for a few reasons.  First, I need some blog posts as I move to test or implement desired functionality.  I have an idea of what I need the blog to be able to support.   But to be able to try it out, I have to fluff out the number of posts and categories and tags in play.&lt;/p&gt;

&lt;p&gt;Next, I’m going to start back posting by yanking notes from other stores or just back creating based on when I did or completed various things.&lt;/p&gt;

&lt;p&gt;But right now, this is just a brief note on &lt;a href=&quot;https://www.hackerrank.com/&quot;&gt;HackerRank&lt;/a&gt; and what I’ve been doing with it.  I was introduced to HackerRank at one of the Metis meetings discussing the Bootcamp.  It was listed as one of the ways to prepare.  In order to get used to it, I started on the tracks of things I already knew.  I pushed through and completed the Linux Shell and Python tracks fairly quickly.  Then I started focusing on the things that seemed most appropriate to prepare for the Metis Bootcamp.&lt;/p&gt;

&lt;p&gt;At the moment, I’m progressing through the “10 days of Javascript” track to refresh on Javascript before bouncing to other sites to work more on both Javascript and CSS in preparation for D3.  For some reason, it gave me access to all of it at once.  When I did the “10 days of Statistics” it opened more each day.&lt;/p&gt;</content><author><name>Joseph Hamilton</name><email>hamilton.joseph.r@gmail.com</email></author><category term="Javascript" /><category term="Training" /><summary type="html">I love HackerRank.</summary></entry><entry><title type="html">Blog Toddler Steps - Step 02</title><link href="/blog/2017/12/17/Blog-Toddler-Steps-02/" rel="alternate" type="text/html" title="Blog Toddler Steps - Step 02" /><published>2017-12-17T00:00:00+00:00</published><updated>2017-12-17T00:00:00+00:00</updated><id>/blog/2017/12/17/Blog-Toddler-Steps-02</id><content type="html" xml:base="/blog/2017/12/17/Blog-Toddler-Steps-02/">&lt;p&gt;Having lots of fun with CircleCI.&lt;/p&gt;

&lt;p&gt;It seems GitHub Pages supports external themes directly at the moment.  So just to use an external theme, I need not have gone to such trouble.  However, in the spirit of Continuous Integration, I implemented a “Test” step incorporating &lt;a href=&quot;https://github.com/gjtorikian/html-proofer&quot;&gt;html-proofer&lt;/a&gt; in a similar fashion as described on &lt;a href=&quot;https://jekyllrb.com/docs/continuous-integration/circleci/&quot;&gt;Jekyll’s page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But I’m getting ahead of myself.  First, for deployment I used a script based on what I found &lt;a href=&quot;https://github.com/DevProgress/onboarding/wiki/Using-Circle-CI-with-Github-Pages-for-Continuous-Delivery&quot;&gt;here&lt;/a&gt;.  And despite many attempts to handle it different ways, I also was unable to get CircleCI to ignore the push to the other branch.  So I similarly just settled for a “skip”.&lt;/p&gt;

&lt;p&gt;Next, I ran into a couple of issues when trying html-proofer locally.  Apparently, linked-in has blocked html-proofer outright.  I probably could &lt;a href=&quot;https://github.com/gjtorikian/html-proofer/blob/002c5f1a578f045ff52f53e447aee16889db2b7a/README.md#user-agent&quot;&gt;change the User Agent&lt;/a&gt; but for the moment it was just easier to use the command line option of htmlproofer to ignore that link.&lt;/p&gt;

&lt;p&gt;But the other problem proved to be a good bit of exercise in Git and &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt;.  Html-proofer was complaining about images which were being served up just fine.  Trouble was an extra space before the closing quote of the url.  I had a hunch were it was but to be able to test it I needed to do the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Fork hydejack&lt;/li&gt;
  &lt;li&gt;Switch the site’s remote-theme to my forked hydejack&lt;/li&gt;
  &lt;li&gt;Clone the fork locally&lt;/li&gt;
  &lt;li&gt;Copy the clone using rsync (yeah… I could have branched)&lt;/li&gt;
  &lt;li&gt;Copy the site on top of the copy via “cp -a”&lt;/li&gt;
  &lt;li&gt;Test using “jekyll build” and “html-proofer”&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Found the issue with the help of &lt;a href=&quot;https://shopify.github.io/liquid/basics/whitespace/&quot;&gt;this page on Liquid&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pushed to my fork.  Tested with CircleCI managing the test and deploy.&lt;/p&gt;

&lt;p&gt;Lastly, I created a pull request to send the fix upstream.&lt;/p&gt;</content><author><name>Joseph Hamilton</name><email>hamilton.joseph.r@gmail.com</email></author><category term="Jekyll" /><category term="CircleCI" /><category term="GitHub" /><summary type="html">Having lots of fun with CircleCI.</summary></entry><entry><title type="html">Blog Toddler Steps - Step 01</title><link href="/blog/2017/12/16/Blog-Toddler-Steps-01/" rel="alternate" type="text/html" title="Blog Toddler Steps - Step 01" /><published>2017-12-16T00:00:00+00:00</published><updated>2017-12-16T00:00:00+00:00</updated><id>/blog/2017/12/16/Blog-Toddler-Steps-01</id><content type="html" xml:base="/blog/2017/12/16/Blog-Toddler-Steps-01/">&lt;p&gt;Well… using Jekyll… I mean actually actively using it is going to be a bit more involved than I may have originally thought.&lt;/p&gt;

&lt;p&gt;I have chosen do pursue a path of using Jekyll in a manner that frees me to be able to toss in themes and plugins at will.  But this requires that I fall back to my earlier view that I would end up maintaining two repositories: one for the input to Jekyll and another for the output.&lt;/p&gt;

&lt;p&gt;Let me first toss in some notes on what I’ve been doing locally to choose a theme and build a site.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I chose to start with &lt;a href=&quot;https://qwtel.com/hydejack/&quot;&gt;HydeJack&lt;/a&gt; which builds upon &lt;a href=&quot;http://jekyllthemes.org/themes/hyde/&quot;&gt;Hyde&lt;/a&gt;.  I was also interested in &lt;a href=&quot;http://jekyllthemes.org/themes/lanyon/&quot;&gt;Lanyon&lt;/a&gt; which builds upon &lt;a href=&quot;http://getpoole.com/&quot;&gt;Poole&lt;/a&gt;.  Lanyon provides a toggle for the sidebar.  Still waffling on that… If I want it I can probably build it.&lt;/li&gt;
  &lt;li&gt;While playing around with Hydejack, I added an icon for HackerRank.  HydeJack’s documentation details how to go about doing that using &lt;a href=&quot;https://icomoon.io/app/&quot;&gt;IcoMoon&lt;/a&gt;.  I grabbed the icon for HackerRank from a collection available at &lt;a href=&quot;https://icomoon.io/app/&quot;&gt;socicon&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;I am likely to use &lt;a href=&quot;https://travis-ci.org/&quot;&gt;TravisCI&lt;/a&gt; to manage things. &lt;a href=&quot;https://jekyllrb.com/docs/continuous-integration/&quot;&gt;Jekyll suggests a handful of Continuous Integration options&lt;/a&gt;.  &lt;a href=&quot;https://circleci.com/&quot;&gt;CircleCI&lt;/a&gt; ranks higher on &lt;a href=&quot;https://www.slant.co/versus/625/627/~circleci_vs_travis&quot;&gt;Slant&lt;/a&gt; at the moment.  But I believe if you narrow the scope to Jekyll on GitHub Pages, TravisCI probably pulls ahead.&lt;/li&gt;
  &lt;li&gt;But…. you know what?  I &lt;strong&gt;will be&lt;/strong&gt; doing more than just blogging, more than just Jekyll.  Let’s back up and ponder.  Part of the reason for chosing Jekyll for blogging at all was it’s focus on Markdown and tight integration with GitHub.  More and deeper experience with Git is more significant than playing with Jekyll.  Similarly, for just Jekyll TravisCI looks best.  But the more I look at the differences between what TravisCI and CircleCI support, the more CircleCI wins out if I consider Data Science projects.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So… let’s get going with CircleCI.&lt;/p&gt;

&lt;p&gt;There are are several guides out there.  But one thing to keep in mind is how GitHub Pages works differs.  GitHub Pages gives each user a single site plus a site for every repository.  For “every repository” the &lt;em&gt;master&lt;/em&gt; branch contains the stuff and the website is in the &lt;em&gt;gh-pages&lt;/em&gt; branch.  For that special single site, the &lt;em&gt;master&lt;/em&gt; branch is the website.  Most of these guides for CircleCI, Jekyll and GitHub are for grabbing from &lt;em&gt;master&lt;/em&gt;, processing and sending output to &lt;em&gt;gh-pages&lt;/em&gt;.  For this single user site, I’ll use the &lt;em&gt;development&lt;/em&gt; branch and push to the &lt;em&gt;master&lt;/em&gt; branch.&lt;/p&gt;

&lt;p&gt;I’d cloned the HydeJack theme and have been working there.  Let’s replace the development branch with that:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mv development development.old
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mv hydejack-starter-kit development
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;development
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rsync &lt;span class=&quot;nt&quot;&gt;-aq&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--del&lt;/span&gt; ../development.old/.git/ .git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;There may have been more proper ways to do that with git.  But that’ll do, pig… that’ll do…&lt;/p&gt;

&lt;p&gt;There are quite a number of examples and guides out there.  I haven’t found one quite suitable here.  The Jekyll guide is using the CircleCI version 1.  One benefit of using version 2 is that CircleCI finds and uses its config in the development branch directly.&lt;/p&gt;

&lt;p&gt;I found &lt;a href=&quot;https://github.com/DevProgress/onboarding/wiki/Using-Circle-CI-with-Github-Pages-for-Continuous-Delivery&quot;&gt;these instructions from GitHub&lt;/a&gt;, to be rather interesting because of the use of another specific GitHub account for write access - rather than giving CircleCI write access to all your repositories.  CircleCI has &lt;a href=&quot;https://circleci.com/docs/1.0/github-security-ssh-keys/#machine-user-keys&quot;&gt;a page describing this&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The idea is strange to me.  But it seems once you hook everything and everyone together, CircleCI knows what to use.  Let’s see how this works…&lt;/p&gt;</content><author><name>Joseph Hamilton</name><email>hamilton.joseph.r@gmail.com</email></author><category term="Jekyll" /><category term="CircleCI" /><category term="GitHub" /><summary type="html">Well… using Jekyll… I mean actually actively using it is going to be a bit more involved than I may have originally thought.</summary></entry><entry><title type="html">Blog Baby Steps - Step 02</title><link href="/blog/2017/12/15/Blog-Baby-Steps-02/" rel="alternate" type="text/html" title="Blog Baby Steps - Step 02" /><published>2017-12-15T00:00:00+00:00</published><updated>2017-12-15T00:00:00+00:00</updated><id>/blog/2017/12/15/Blog-Baby-Steps-02</id><content type="html" xml:base="/blog/2017/12/15/Blog-Baby-Steps-02/">&lt;p&gt;Progressing through some baby steps…&lt;/p&gt;

&lt;p&gt;Spawned a development branch.  Pulled it down.&lt;/p&gt;

&lt;p&gt;Found and fixed a bug with layout for posts.&lt;/p&gt;

&lt;p&gt;Corrected something for the RSS feed (layout to “null”).&lt;/p&gt;

&lt;p&gt;Alright… I’ve been using Jekyll locally on the laptop.  Took a bit to get used to how this should work and flow.  But the warnings one can see by doing this guided me to the fixes above.&lt;/p&gt;

&lt;p&gt;Now… let’s try to push this and pull it from the home network…&lt;/p&gt;

&lt;p&gt;Piece of cake.  Hadn’t set up authentication for git yet in the home network.  Good to get
that out of the way.&lt;/p&gt;

&lt;p&gt;So, the next thing to do here is to experiment with themes.  Color, flair, special effects and
all sorts of bells and whistles may prove distracting.  But there are a few “needs” here.
To me these are critical:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use of categories
    &lt;ul&gt;
      &lt;li&gt;Search on categories&lt;/li&gt;
      &lt;li&gt;Sidebar (or something) listing categories&lt;/li&gt;
      &lt;li&gt;Heirarchical category management&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Search by Date&lt;/li&gt;
  &lt;li&gt;Pagination&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But let’s just start with the distracting fun stuff.&lt;/p&gt;

&lt;p&gt;Hmm… experimentation with themes seems to show I need the github-pages gem and it’s not
installed.  Woah.  It pulls quite a lot with it.  And for some reason, it’s taking forever
on the home network.&lt;/p&gt;

&lt;p&gt;And that was pointless.  Well… no.  It was unsuccessful.  Well… no.  It just introduced
some &lt;em&gt;issues&lt;/em&gt;.  Punching in github-pages added quite a lot to Gemfile.lock.  You end up
with multiple gem versions.  The “correct” thing to do is to force ruby to use the versions
specificed in the lock file by calling “bundle exec jekyll serve” rather than “jekyll serve”.&lt;/p&gt;

&lt;p&gt;Next, however, there is going to be a limitation of what will be supported via hosting on
GitHub Pages.  Not at all sure this matters.  I haven’t even tried any themes yet.  But
something to consider.  The solution is straightforward if I find I need something more:
just use jekyll locally to produce the content and then push that.&lt;/p&gt;

&lt;p&gt;Let’s try at least one them before pushing and switching back to the laptop…&lt;/p&gt;

&lt;p&gt;Ouch.  OK.  This is NOT what I expected.  I was spoiled before, I guess.  I was expecting
something like changing skins on any number of things… where it would be a relatively
minor one-line change thing.  It is not at all this easy.  I found I liked one of the
themes supported directly by GitHub Pages.  And I can serve it locally… but copying
over the data and configuration from another existing Jekyll site is manual and tedious.&lt;/p&gt;

&lt;p&gt;Worse yet, a bit of research into plugins and such strongly suggests to me I’ll need
to use plugins not supported innately on GitHub Pages.&lt;/p&gt;

&lt;p&gt;Beginning to explore next steps…&lt;/p&gt;</content><author><name>Joseph Hamilton</name><email>hamilton.joseph.r@gmail.com</email></author><summary type="html">Progressing through some baby steps…</summary></entry><entry><title type="html">Blog Baby Steps - Step 01</title><link href="/blog/2017/12/15/Blog-Baby-Steps-01/" rel="alternate" type="text/html" title="Blog Baby Steps - Step 01" /><published>2017-12-15T00:00:00+00:00</published><updated>2017-12-15T00:00:00+00:00</updated><id>/blog/2017/12/15/Blog-Baby-Steps-01</id><content type="html" xml:base="/blog/2017/12/15/Blog-Baby-Steps-01/">&lt;p&gt;This is going to be interesting.&lt;/p&gt;

&lt;p&gt;I have evolved or devolved a bit with regards to blogging.  Blogging serves many purposes.  But if your primary purpose is something akin to a diary or a personal log for future reference,  anything akin to WordPress ends up being a bit of overkill.&lt;/p&gt;

&lt;p&gt;I really resonated with &lt;a href=&quot;http://jmcglone.com/notes/2014/05/03/using-github-to-create-and-host-a-personal-website&quot;&gt;the comments in the Jekyll-Github-Blog guide&lt;/a&gt;.  It isn’t that hard at all to setup a LAMP stack or whatever to get a blog going.  And it’s not &lt;strong&gt;that&lt;/strong&gt; hard to manage the migrations, updates, changes in database, hardware changes, dying disk drives, etc.  But at some point, you ask yourself “why am I doing this?”.&lt;/p&gt;

&lt;p&gt;Here’s what I have been doing lately:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$ vi this_or_that_logfile&lt;/li&gt;
  &lt;li&gt;!!date (punch in that timestamp)&lt;/li&gt;
  &lt;li&gt;write text&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I left off the last bullet which would have said something like save file and exit vi… for a reason… ‘cause I never do that.  Just like having Firefox open with dozens of tabs, with tabbed terminals, I can just leave the stinking text file open… forever.&lt;/p&gt;

&lt;p&gt;I like what I’m seeing with Jekyll.  But it seems pretty clear to me that I’m going to end up wrapping my usual practice up to auto-generate the post files.  We’ll see…&lt;/p&gt;

&lt;p&gt;In any case, I need to continue taking Jekyll for a spin - especially with regards how to use it with GitHub pages.  So what are my next few baby steps?  Hang on… let me slide over to my aforementioned text file and see what I’d noted…&lt;/p&gt;

&lt;p&gt;Ah yes….&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Follow the guide to create a blog… DONE the rest for tomorrow.&lt;/li&gt;
  &lt;li&gt;Add a post&lt;/li&gt;
  &lt;li&gt;Create a development branch&lt;/li&gt;
  &lt;li&gt;Use Jekyll locally on laptop&lt;/li&gt;
  &lt;li&gt;Use Jekyll locally on home network&lt;/li&gt;
  &lt;li&gt;Experiment with themes&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now why is markdown doing that?  Sigh… well, I’m learning markdown here too.  But seriously, it looks nasty to start a numbered list with lower case roman numerals.  OK… a &lt;a href=&quot;https://github.com/github/markup/issues/991&quot;&gt;bug&lt;/a&gt;.  Lovely.  Glad I picked up a &lt;a href=&quot;https://remarkableapp.github.io/&quot;&gt;markdown editor&lt;/a&gt; despite how likely I will be using vi or any ole’ text editor.  Unless… this is a problem only IN the markdown editor…  No.  This editor supports multiple “styles” and this works fine in styles other than “GitHub”.&lt;/p&gt;

&lt;p&gt;Sheesh.  Let’s push it and check…&lt;/p&gt;

&lt;p&gt;OK.  Good news and bad news.  As I expected, the GitHub hosted rendition of the Jekyll produced blog is using whatever CSS I specified or none at all.  So it does what it would do as raw HTML.  The bad news?  The HTML produced is different.  Sigh… so markdown is apparently widely open to interpretation?  Hmm…&lt;/p&gt;</content><author><name>Joseph Hamilton</name><email>hamilton.joseph.r@gmail.com</email></author><summary type="html">This is going to be interesting.</summary></entry><entry><title type="html">Joseph Hamilton Launches Site</title><link href="/blog/2017/12/14/Beginnings/" rel="alternate" type="text/html" title="Joseph Hamilton Launches Site" /><published>2017-12-14T00:00:00+00:00</published><updated>2017-12-14T00:00:00+00:00</updated><id>/blog/2017/12/14/Beginnings</id><content type="html" xml:base="/blog/2017/12/14/Beginnings/">&lt;p&gt;Starting a new website/blog using Jekyll…&lt;/p&gt;</content><author><name>Joseph Hamilton</name><email>hamilton.joseph.r@gmail.com</email></author><summary type="html">Starting a new website/blog using Jekyll…</summary></entry></feed>